---
# https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/

- name: install pre-requisites
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common

- name: add apt key
  apt_key:
    url: "{{ kubernetes_gpgkey }}"
    state: present

- name: add apt repo
  apt_repository:
    repo: "{{ kubernetes_repository }}"
    state: present
    update_cache: true

- name: kubeadm config file
  template:
    src: init-config.yaml.j2
    dest: kubeadm-config.yaml
  when: true  # control-plane

- name: kubeadm config file
  template:
    src: join-config.yaml.j2
    dest: kubeadm-config.yaml
  when: false  # TODO: worker

- name: cri install package
  apt:
    name: cri-tools

- name: cri config file
  template:
    src: crictl.yaml.j2
    dest: /etc/crictl.yaml
    owner: root
    group: root
    mode: 0644

- name: cni install package
  apt:
    name: kubernetes-cni

- name: cni config directory
  file:
    path: /etc/cni/net.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: cni config file
  copy:
    src: 10-docker-net.conflist
    dest: /etc/cni/net.d/10-docker-net.conflist
    owner: root
    group: root
    mode: 0644

- name: install packages
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - kubeadm
      - kubelet
      - kubectl

- name: kubeadm short version
  shell: kubeadm version --output short
  register: kubeadm_version
  changed_when: k8s_kubeadm_version is not defined or k8s_kubeadm_version != kubeadm_version.stdout

- name: kubeadm images list
  shell: kubeadm config images list --kubernetes-version={{ kubeadm_version.stdout }}
  register: kubeadm_images
  changed_when: k8s_kubeadm_version is not defined or k8s_kubeadm_version != kubeadm_version.stdout

- name: cache kubeadm version
  set_fact:
    k8s_kubeadm_version: "{{ kubeadm_version.stdout }}"
    cacheable: true
  when: not kubeadm_version.failed

- name: kubeadm images text
  copy:
    content: "{{ kubeadm_images.stdout }}"
    dest: kubernetes-{{ k8s_kubeadm_version }}-images.txt
  when:
    not kubeadm_images.failed

- name: kubeadm pause image
  shell: set -o pipefail; kubeadm config images list | grep pause
  args:
    executable: /bin/bash
  register: pause_image
  changed_when: k8s_pause_image is not defined or k8s_pause_image != pause_image.stdout

- name: cache pause image
  set_fact:
    k8s_pause_image: "{{ pause_image.stdout }}"
    cacheable: true
  when: not pause_image.failed

- name: cri-dockerd service override
  file:
    path: /etc/systemd/system/cri-docker.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: cri-dockerd service override
  template:
    src: override.conf.j2
    dest: /etc/systemd/system/cri-docker.service.d/override.conf
    owner: root
    group: root
    mode: 0644
  notify: cri-dockerd service restart

# See https://github.com/ansible/ansible-modules-core/issues/19 (from 2014)

- name: show hold
  command: apt-mark showhold
  register: held_packages
  changed_when: false

- name: hold packages
  shell: apt-mark hold {{ item }}
  changed_when: "item not in held_packages.stdout"
  with_items:
    - kubeadm
    - kubelet
    - kubectl
